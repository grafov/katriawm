Active "sprint":

    - publish_state():
        - Save slots
        - Selected monitor


--- Future ---

Next "sprint":

    - std types / go for C99
        - Images: We need 32 bit integers, not just integers!
    - EWMH
        - Active window
        - Client list on root window
        - Hints on decoration windows so stuff like compton can ignore
          them (also set their WM_CLASS)
    - ICCCM
        - WM_NORMAL_HINTS
            - should fix GIMP dialogs not resizing themselves
    - scan():
        - Grab server?

Next "sprint":

    - Test on BSD
    - Test on different architectures
    - Create and test asymmetrical theme (top != bottom already works,
      test left != right)
    - Refactor: There is no need for "monitors" being a list. It's just
      a dwm-ism that complicates things for us. Monitors aren't
      added/removed all the time like clients. We should make "monitors"
      a calloc'd array.
    - Refactor: manage_apply_rules() is bad. This can be shortened and
      simplified.
    - Refactor: Rename "selc" to something like "focus_head". "selc" is
      not only "the currently selected client" but refers to the focus
      list.
    - Refactor: Add one function to clear urgency hints, kill code
      duplication.
    - Refactor: ipc_client_resize_mouse() duplicates a lot of code from
      ipc_client_move_mouse().


--- Ideas ---

- katriac could check for _KATRIA_STATE being present on the root
  window. If not, sleep for 0.5 seconds and try again.
- katriarc, a client for supplying runtime configuration. Would have to
  work the way herbstclient does (creating a window). Would free you
  from the need to recompile and reexec katriawm. Adds a lot of
  complexity, though.
- More IPC calls:
    - Jump to workspace N on monitor M.
    - Show workspace N on monitor M without jumping to it.
